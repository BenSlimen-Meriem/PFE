package com.jhipster.demo.pfe.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MotifAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMotifAllPropertiesEquals(Motif expected, Motif actual) {
        assertMotifAutoGeneratedPropertiesEquals(expected, actual);
        assertMotifAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMotifAllUpdatablePropertiesEquals(Motif expected, Motif actual) {
        assertMotifUpdatableFieldsEquals(expected, actual);
        assertMotifUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMotifAutoGeneratedPropertiesEquals(Motif expected, Motif actual) {
        assertThat(expected)
            .as("Verify Motif auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMotifUpdatableFieldsEquals(Motif expected, Motif actual) {
        assertThat(expected)
            .as("Verify Motif relevant properties")
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()))
            .satisfies(e -> assertThat(e.getLibelle()).as("check libelle").isEqualTo(actual.getLibelle()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getPriorite()).as("check priorite").isEqualTo(actual.getPriorite()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMotifUpdatableRelationshipsEquals(Motif expected, Motif actual) {
        // empty method
    }
}
