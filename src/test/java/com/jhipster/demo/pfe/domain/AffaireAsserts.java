package com.jhipster.demo.pfe.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AffaireAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAffaireAllPropertiesEquals(Affaire expected, Affaire actual) {
        assertAffaireAutoGeneratedPropertiesEquals(expected, actual);
        assertAffaireAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAffaireAllUpdatablePropertiesEquals(Affaire expected, Affaire actual) {
        assertAffaireUpdatableFieldsEquals(expected, actual);
        assertAffaireUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAffaireAutoGeneratedPropertiesEquals(Affaire expected, Affaire actual) {
        assertThat(expected)
            .as("Verify Affaire auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAffaireUpdatableFieldsEquals(Affaire expected, Affaire actual) {
        assertThat(expected)
            .as("Verify Affaire relevant properties")
            .satisfies(e -> assertThat(e.getReference()).as("check reference").isEqualTo(actual.getReference()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAffaireUpdatableRelationshipsEquals(Affaire expected, Affaire actual) {
        assertThat(expected)
            .as("Verify Affaire relationships")
            .satisfies(e -> assertThat(e.getClient()).as("check client").isEqualTo(actual.getClient()));
    }
}
