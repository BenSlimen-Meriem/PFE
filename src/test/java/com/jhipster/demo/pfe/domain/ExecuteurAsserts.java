package com.jhipster.demo.pfe.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ExecuteurAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExecuteurAllPropertiesEquals(Executeur expected, Executeur actual) {
        assertExecuteurAutoGeneratedPropertiesEquals(expected, actual);
        assertExecuteurAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExecuteurAllUpdatablePropertiesEquals(Executeur expected, Executeur actual) {
        assertExecuteurUpdatableFieldsEquals(expected, actual);
        assertExecuteurUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExecuteurAutoGeneratedPropertiesEquals(Executeur expected, Executeur actual) {
        assertThat(expected)
            .as("Verify Executeur auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExecuteurUpdatableFieldsEquals(Executeur expected, Executeur actual) {
        assertThat(expected)
            .as("Verify Executeur relevant properties")
            .satisfies(e -> assertThat(e.getNom()).as("check nom").isEqualTo(actual.getNom()))
            .satisfies(e -> assertThat(e.getNiveauExpertise()).as("check niveauExpertise").isEqualTo(actual.getNiveauExpertise()))
            .satisfies(e -> assertThat(e.getDisponibilite()).as("check disponibilite").isEqualTo(actual.getDisponibilite()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExecuteurUpdatableRelationshipsEquals(Executeur expected, Executeur actual) {
        assertThat(expected)
            .as("Verify Executeur relationships")
            .satisfies(e -> assertThat(e.getEmployee()).as("check employee").isEqualTo(actual.getEmployee()));
    }
}
