package com.jhipster.demo.pfe.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OrdreFacturationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrdreFacturationAllPropertiesEquals(OrdreFacturation expected, OrdreFacturation actual) {
        assertOrdreFacturationAutoGeneratedPropertiesEquals(expected, actual);
        assertOrdreFacturationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrdreFacturationAllUpdatablePropertiesEquals(OrdreFacturation expected, OrdreFacturation actual) {
        assertOrdreFacturationUpdatableFieldsEquals(expected, actual);
        assertOrdreFacturationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrdreFacturationAutoGeneratedPropertiesEquals(OrdreFacturation expected, OrdreFacturation actual) {
        assertThat(expected)
            .as("Verify OrdreFacturation auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrdreFacturationUpdatableFieldsEquals(OrdreFacturation expected, OrdreFacturation actual) {
        assertThat(expected)
            .as("Verify OrdreFacturation relevant properties")
            .satisfies(e -> assertThat(e.getDate()).as("check date").isEqualTo(actual.getDate()))
            .satisfies(e -> assertThat(e.getBonDeCommande()).as("check bonDeCommande").isEqualTo(actual.getBonDeCommande()))
            .satisfies(e -> assertThat(e.getFacture()).as("check facture").isEqualTo(actual.getFacture()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrdreFacturationUpdatableRelationshipsEquals(OrdreFacturation expected, OrdreFacturation actual) {
        assertThat(expected)
            .as("Verify OrdreFacturation relationships")
            .satisfies(e -> assertThat(e.getWorkOrder()).as("check workOrder").isEqualTo(actual.getWorkOrder()));
    }
}
