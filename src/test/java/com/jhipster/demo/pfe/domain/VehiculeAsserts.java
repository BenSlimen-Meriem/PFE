package com.jhipster.demo.pfe.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class VehiculeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehiculeAllPropertiesEquals(Vehicule expected, Vehicule actual) {
        assertVehiculeAutoGeneratedPropertiesEquals(expected, actual);
        assertVehiculeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehiculeAllUpdatablePropertiesEquals(Vehicule expected, Vehicule actual) {
        assertVehiculeUpdatableFieldsEquals(expected, actual);
        assertVehiculeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehiculeAutoGeneratedPropertiesEquals(Vehicule expected, Vehicule actual) {
        assertThat(expected)
            .as("Verify Vehicule auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehiculeUpdatableFieldsEquals(Vehicule expected, Vehicule actual) {
        assertThat(expected)
            .as("Verify Vehicule relevant properties")
            .satisfies(e -> assertThat(e.getModel()).as("check model").isEqualTo(actual.getModel()))
            .satisfies(e -> assertThat(e.getNumeroCarteGrise()).as("check numeroCarteGrise").isEqualTo(actual.getNumeroCarteGrise()))
            .satisfies(e -> assertThat(e.getNumSerie()).as("check numSerie").isEqualTo(actual.getNumSerie()))
            .satisfies(e -> assertThat(e.getStatut()).as("check statut").isEqualTo(actual.getStatut()))
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehiculeUpdatableRelationshipsEquals(Vehicule expected, Vehicule actual) {
        assertThat(expected)
            .as("Verify Vehicule relationships")
            .satisfies(e -> assertThat(e.getWorkOrders()).as("check workOrders").isEqualTo(actual.getWorkOrders()));
    }
}
