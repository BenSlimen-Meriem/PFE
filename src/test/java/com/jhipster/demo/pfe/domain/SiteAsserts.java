package com.jhipster.demo.pfe.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SiteAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSiteAllPropertiesEquals(Site expected, Site actual) {
        assertSiteAutoGeneratedPropertiesEquals(expected, actual);
        assertSiteAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSiteAllUpdatablePropertiesEquals(Site expected, Site actual) {
        assertSiteUpdatableFieldsEquals(expected, actual);
        assertSiteUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSiteAutoGeneratedPropertiesEquals(Site expected, Site actual) {
        assertThat(expected)
            .as("Verify Site auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSiteUpdatableFieldsEquals(Site expected, Site actual) {
        assertThat(expected)
            .as("Verify Site relevant properties")
            .satisfies(e -> assertThat(e.getNom()).as("check nom").isEqualTo(actual.getNom()))
            .satisfies(e -> assertThat(e.getAdresse()).as("check adresse").isEqualTo(actual.getAdresse()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSiteUpdatableRelationshipsEquals(Site expected, Site actual) {
        assertThat(expected)
            .as("Verify Site relationships")
            .satisfies(e -> assertThat(e.getSociete()).as("check societe").isEqualTo(actual.getSociete()));
    }
}
